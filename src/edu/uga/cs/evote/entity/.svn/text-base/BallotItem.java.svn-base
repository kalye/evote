package evote.src.edu.uga.cs.evote.entity;

import evote.src.edu.uga.cs.evote.EVException;
import evote.src.edu.uga.cs.evote.persistence.Persistable;

public interface BallotItem 
    extends Persistable
{
    /** Return the vote count of this BallotItem.
     * @return the vote count of this BallotItem
     */
    public int getVoteCount();
    
    /** Set the new vote count of this BallotItem.
     * @param voteCount the new vote count;  it must be non-negative
     * @throws EVException in case the new vote is negative
     */
    public void setVoteCount( int voteCount ) throws EVException;

    /** Add one vote (increment by one) to the vote count of this BallotItem.
     */
    public void addVote();
    
    /** Return the Ballot on which this BallotItem is listed.
     * @return the Ballot of this BallotItem
     * @throws EVException in case there is a problem with traversing a link to the requested object
     */
    public Ballot getBallot() throws EVException;
    
    /** Set the new Ballot on which this BallotItem is listed.
     * @param ballot the new Ballot 
     * @throws EVException in case there is a problem with setting a link to the requested object
     */
    public void setBallot( Ballot ballot ) throws EVException;
    
    /** Return the kind of this BallotItem(Election or issue).
     * @return the kind  of this BallotItem
     */
    public String getKind();
    
    /** Set the kind of BallotItem(election or issue)
     * @param kind (election or issue)
     * @throws EVException in case there is a problem with setting a link to the requested object
     */
    public void setKind(String kind);
    
    /**
     * Gets the value of office (if BallotItem is an Election) or null (otherwise)
     * @return office or null
     */
    public default String getOffice(){
    	return null;
    }
    
    /**
     * Sets the value of office (if BallotItem is an Election) or does nothing (otherwise)
     */
    public default void setOffice(String office){}
    
    /**
     * Gets the value of question (if BallotItem is an Issue) or null (otherwise)
     * @return question or null
     */
    public default String getQuestion(){
    	return null;
    }
    
    /**
     * Sets the value of question (if BallotItem is an Issue) or does nothing (otherwise)
     */
    public default void setQuestion(String question){}
    
    /**
     * Gets the value of isPartisan (if BallotItem is an Election) or false (otherwise)
     * @return isPartisan or false
     */
    public default boolean getIsPartisan(){
    	return false;
    }

    /**
     * Sets the value of isPartisan (if BallotItem is an Election) or does nothing (otherwise)
     */
    public default void setIsPartisan(boolean isPartisan){}
    
    /**
     * Gets the value of yesCount (if BallotItem is an Issue) or 0 (otherwise)
     * @return yesCount or 0
     */
    public default int getYesCount(){
    	return 0;
    }
    
    /**
     * Sets the value of yesCount (if BallotItem is an Issue) or does nothing (otherwise)
     * @throws EVException 
     */
    public default void setYesCount(int yesCount) throws EVException{}
}
